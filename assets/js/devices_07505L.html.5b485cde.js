"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[59969],{10867:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>d,data:()=>r});var n=t(6254);const o={},d=(0,t(30469).A)(o,[["render",function(e,a){const t=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[a[7]||(a[7]=(0,n.Lk)("h1",{id:"immax-07505l",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#immax-07505l"},[(0,n.Lk)("span",null,"Immax 07505L")])],-1)),(0,n.Lk)("table",null,[a[6]||(a[6]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[a[2]||(a[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"07505L")],-1)),(0,n.Lk)("tr",null,[a[1]||(a[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(t,{to:"/supported-devices/#v=Immax"},{default:(0,n.k6)((()=>a[0]||(a[0]=[(0,n.eW)("Immax")]))),_:1})])]),a[3]||(a[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Neo smart keypad")],-1)),a[4]||(a[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"action, tamper")],-1)),a[5]||(a[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/07505L.png",alt:"Immax 07505L"})])],-1))])]),a[8]||(a[8]=(0,n.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>disarm</code>, <code>arm_home</code>, <code>arm_away</code>, <code>sos</code>.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p>',5))])}]]),r=JSON.parse('{"path":"/devices/07505L.html","title":"Immax 07505L control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Immax 07505L control via MQTT","description":"Integrate your Immax 07505L via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-01-01T09:10:19.000Z"},"git":{"updatedTime":1745757570000,"contributors":[{"name":"Andrey Osin","username":"","email":"zombierzn@gmail.com","commits":2}],"changelog":[{"hash":"4c1d7d2e27667302da3ebb5ab2b3ef2be9f4b2e4","time":1745757570000,"email":"zombierzn@gmail.com","author":"Andrey Osin","message":"Update POK016 image (#3732)","coAuthors":[{"name":"Andrey Osin","email":"andreyo@pushok.com"}]}]},"filePathRelative":"devices/07505L.md"}')}}]);